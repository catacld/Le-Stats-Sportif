// COPYRIGHT CALDARUSE-MARIUS CATALIN 333CA



data_ingestor.py:
PARSEZ FISIERUL DAT CA INPUT SI SALVEZ DATELE INTR-O LISTA, FOLOSIND O CLASA 'RECORD' PENTRU A FACE MATCH INTRE
ATRIBUTELE CLASEI SI NUMELE COLOANELOR DIN CSV. MAI DEPARTE, SALVEZ CE AM CITIT IN DATABASE, O CLASA
SINGLETON IMPARTASITA DE CATRE TOATE CLASELE

database.py
CLASA SINGLETON PENTRU A IMPARTASI DATELE CITITE DIN CSV INTRE TOATE CLASELE. DINTRE METODELE DECLARATE IN
ACEASTA CLASA, UNA ESTE FOLOSITA PENTRU A ASIGNA ID-URI PE MASURA CE VIN REQUEST-URI, CARE VA FI APELATA DOAR DIN
THREAD-UL MAIN, DECI NU TREBUIE SINCRONIZATA. ASEMENATOR, METODA DE LOGGING VA FI ACCESATA DOAR DIN THREAD-UL MAIN,
DECI NU TREBUIE SINCRONIZATA. METODELE CARE MODIFICA STARILE JOB-URILOR CURENTE SUNT SINCRONIZATE
PENTRU A NE ASIGURA CA VALOAREA CITITA VA FI MEREU CORECTA, INTRUCAT DICTIONARUL POATE SA FIE MODIFICAT FIE DE
THREAD-UL MAIN, FIE DE UNUL DINTRE WORKERS.

routes.py
TRATEAZA REQUEST-URILE PRIMITE, LE ASSIGNEAZA UN ID SI LE PUNE IN COADA ALATURI DE PARAMETRII NECESARI PRELUCRARII
ACESTORA, MAI DEPARTE FIIND PRELUATE SI REZOLVATE DE CATRE WORKERS.

task_runner.py
ESTE DECLARAT SI PORNIT UN ANUMIT NUMAR DE THREAD-URI DE WORKERS, DEPINZAND DE EXISTENTA VARIABILEI 'TP_NUM_OF_THREADS'.
DACA SE PRIMESTE UN REQUEST DE SHUTDOWN IAR THREAD-UILE AU PROCESAT TOATE JOB-URILE (COADA ESTE GOALA), ACESTEA SUNT
OPRITE. FIECARE WORKER THREAD VA PRELUA TASK-URI DIN COADA SI, IN FUNCTIE DE TIPUL ACESTORA, LE VA REZOLVA SI VA
SALVA REZULTATUL INTR-UN FISIER DE OUTPUT.

AM INCLUS DE ASEMENEA FISIERELE FOLOSITE PENTRU UNITTESTING SI UN FISIER DE LOGGING OBTINUT IN URMA UNEI RULARI
COMPLETE A TESTELOR.

P.S: DIN CAUZA UNEI PROBLEME TEHNICE (INCERCAND SA FOLOSESC CLASA SINGLETON 'DATABASE' IN INTERIORUL CLASEI DE UNITTESTING,
APP NU ERA RECUNOSCUT CA UN PACKAGE), AM ADAUGAT LINIA 23 IN 'data_ingestor.py' PENTRU A FACE SWITCH INTRE BAZA MARE DE
DATE SI MOCK DATABASE FACUTA DE MINE PENTRU TESTE. PENTRU CA UNITTEST-URILE SA FUNCTIONEZE TREBUIE DECOMENTATA LINIA
RESPECTIVA :D